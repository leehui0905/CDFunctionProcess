# This is a basic workflow to help you get started with Actions

name: "DockerBuildPush"

# Controls when the workflow will run
on:
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_push:
    name: Docker Build Push
    #runs-on: [self-hosted, linux, x64]
    runs-on: ubuntu-18.04
    environment: stage-com-ent-us
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: 'true'
      
      #- name: Scan White source by CLI
      #  working-directory: ${{ github.workspace }}
      #  run: |
      #    cd WhiteSourceScan
      #    chmod +x scan.sh
      #    ./scan.sh
          
        
      #- name: Azure Login
      #  uses: Azure/login@v1
      #  with:
      #    creds: ${{ secrets.AZURE_CREDENTIALS_PRIMARY }}
          #client-id: ${{ secrets.AZURE_CLIENT_ID }}
          #tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          #subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    #- name: Obtain WhiteSource API keys from Key Vault
    #  uses: Azure/get-keyvault-secrets@v1
    #  with:
    #    keyvault: 'sample-key-vault'
    #    secrets: 'ws-api-key,ws-user-key,ws-product-token'
    #  id: keys
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: sensorsolutions.azurecr.io
          username: ${{ secrets.SENSOR_SOLUTIONS_AZURECR_USER }}
          password: ${{ secrets.SENSOR_SOLUTIONS_AZURECR_PASS }}
        
      - name: Build source code
        working-directory: ${{ github.workspace }}
        run: |
          mkdir build 
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ..
          make -j8
          make install
          
      - name: Update Docker Package
        working-directory: ${{ github.workspace }}
        run: |
          chmod +x ./makeUpgradePackage.sh
          ./makeUpgradePackage.sh
          cp update.tar.gz ./LPRDocker/update.tar.gz          
      
      - name: Build and push Docker
        uses: docker/build-push-action@v2
        with:
          context: ./LPRDocker
          #file: ./LPRDocker/Dockerfile
          push: true
          tags: sensorsolutions.azurecr.io/dinhho-lprdocker:4.4.210.4
